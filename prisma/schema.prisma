generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgres"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id                  String              @id @default(uuid())
  name                String
  email               String              @unique
  role                Role                @default(USER)
  projectsAssignments ProjectAssignment[] // Links to assigned projects
  timeLogs            TimeLog[] // Links to time logs
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  projects            Project[]           @relation("User")
}

model Project {
  id             String              @id @default(uuid())
  name           String
  description    String?
  estimatedHours Float
  createdBy      String // ID of the user who created the project
  creator        User                @relation("User", fields: [createdBy], references: [id])
  assignments    ProjectAssignment[] // Links to assigned users
  timeLogs       TimeLog[] // Links to time logs
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  userId         String?
}

model ProjectAssignment {
  id         String   @id @default(uuid())
  userId     String
  projectId  String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assignedAt DateTime @default(now())
}

model TimeLog {
  id        String   @id @default(uuid())
  userId    String
  projectId String
  hours     Float
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
}
